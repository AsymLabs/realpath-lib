{"name":"Realpath-lib","tagline":"Bash-centric realpath tools for cross-platform portability.","body":"realpath-lib\r\n============\r\n\r\nThe lightweight and simple Bash library `realpath-lib` provides functions that\r\ncan resolve the full path associated with a file name.   These functions are:  \r\n\r\n>get_realpath  \r\n>get_dirname  \r\n>get_filename  \r\n>get_stemname  \r\n>validate_path  \r\n\r\n`realpath-lib` was inspired in part by realpath tools that provided in other\r\nlanguages.  We are not aware of a Bash specific version that does not require\r\nexternal or other platform specific dependencies.  This is pure Bash.  \r\n\r\nMotivation\r\n==========\r\n\r\nRecent work writing scripts that should function the same way across Mac, Linux\r\nand Windows has revealed that certain system/Bash tools are not available for\r\nall platforms.  Quite often the standard way of resolving file names, such as\r\nthe use of *basename*, *readlink* or others has led to portability problems.  \r\n  \r\nFor this reason we have prepared this set of tools for use in Bash scripts.  It\r\nuses only simple built-in features and should not require anything else.   \r\n\r\nDependencies\r\n============\r\n\r\nBash 4+ and nothing else.  This could be revised to work with earlier versions\r\nbut we leave this as an exercise for others.  \r\n\r\nFeatures\r\n========\r\n\r\nThe path argument can be provided as a local file name, relative path or an\r\nabsolute path.  It should permit symlinks but we have not yet verified this\r\nacross platforms.  Functions are classified into two groups: getters and\r\nvalidators.  \r\n\r\nGetters\r\n-------\r\n\r\nThe following functions will resolve the path argument to a full absolute path\r\nstring (if it is found) and return an exit condition of **0 for success** and \r\n**1 for failure** - meaning they can be used for testing purposes too.  \r\n  \r\n>get_realpath 'path-arg'  \r\n>get_dirname 'path-arg'  \r\n>get_filename 'path-arg'  \r\n>get_stemname 'path-arg'  \r\n>  \r\n>where **path-arg** can be a local file, a relative path or absolute path.   \r\n\r\nValidators\r\n----------\r\n\r\nThe function `validate_path` will return an exit condition of **0 for success**\r\nor will **abort on failure**.  This leads us to the following warning: **do not\r\nuse validate_path at the top level of your shell - as a failure to validate will\r\nkill it and any sub-processes!**  \r\n  \r\n>validate_path 'path-arg'  \r\n>  \r\n>where **path-arg** is the same as above.  \r\n\r\nUsage\r\n=====\r\n\r\nThis is not a Bash executable.  Source it at the beginning of your executable\r\nscript with:  \r\n\r\n````bash\r\nsource '/your/path/to/realpath-lib'\r\n````\r\n\r\nThat's it.\r\n  \r\nExamples\r\n========\r\n\r\nTo use the 'getters' for testing purposes, do something like:  \r\n\r\n````bash\r\nget_realpath \"$1\" &>/dev/null\r\nif (( $? ))  # true when non-zero.\r\nthen\r\n    # Do failure actions. \r\n    return 1 # Failure. \r\nfi\r\n````\r\n\r\nWhile these are designed to be used exclusively in scripts, some top level shell\r\nexamples are:  \r\n\r\n>[user@a52j MyLib]$ ls '/home/user/MyLib/archive.tar.gz'  \r\n>/home/user/MyLib/archive.tar.gz  \r\n>  \r\n>[user@a52j MyLib]$ source realpath-lib  \r\n>[user@a52j MyLib]$  \r\n>  \r\n>[user@a52j MyLib]$ get_realpath 'archive.tar.gz'  \r\n>/home/user/MyLib/archive.tar.gz  \r\n>  \r\n>[user@a52j MyLib]$ get_dirname 'archive.tar.gz'  \r\n>/home/user/MyLib  \r\n>  \r\n>[user@a52j MyLib]$ get_filename 'archive.tar.gz'  \r\n>archive.tar.gz  \r\n>  \r\n>[user@a52j MyLib]$ get_stemname 'archive.tar.gz'  \r\n>archive  \r\n>  \r\n>[user@a52j MyLib]$ validate_path 'archive.tar.gz'  \r\n>[user@a52j MyLib]$  \r\n>  \r\n>[user@a52j MyLib]$ cd ../Templates  \r\n>[user@a52j Templates]$  \r\n>  \r\n>[user@a52j Templates]$ get_realpath '../MyLib/archive.tar.gz'  \r\n>/home/user/MyLib/archive.tar.gz  \r\n>  \r\n>[user@a52j Templates]$ get_dirname '../MyLib/archive.tar.gz'  \r\n>/home/user/MyLib  \r\n>  \r\n>[user@a52j Templates]$ get_filename '../MyLib/archive.tar.gz'  \r\n>archive.tar.gz  \r\n>  \r\n>[user@a52j Templates]$ get_stemname '../MyLib/archive.tar.gz'  \r\n>archive  \r\n>  \r\n>[user@a52j Templates]$ validate_path '../MyLib/archive.tar.gz'  \r\n>[user@a52j Templates]$  \r\n\r\nTerms\r\n=====\r\n\r\nWe offer this to the community for free and you may use it as you wish.  \r\n  \r\nThis source is Copyright (C) Applied Numerics Ltd 2013 Great Britain under the\r\nbrand name AsymLabs (TM) and is provided to the community under the MIT license.\r\nAlthough we have not yet encountered any issues, there is no warranty of any\r\ntype given so you must use it at your own risk.  \r\n\r\nClosure\r\n=======\r\n\r\nWe hope that you find this Bash library to be of value.  Should you have any\r\ncomments or suggestions for improvement please let us know at\r\ndv@angb.co.  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}